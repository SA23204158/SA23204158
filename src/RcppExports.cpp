// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// EMcpp
List EMcpp(NumericVector x, double s, NumericVector y, NumericVector u, NumericVector v, double lambda0, int max_it, double tol);
RcppExport SEXP _SA23204158_EMcpp(SEXP xSEXP, SEXP sSEXP, SEXP ySEXP, SEXP uSEXP, SEXP vSEXP, SEXP lambda0SEXP, SEXP max_itSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< int >::type max_it(max_itSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(EMcpp(x, s, y, u, v, lambda0, max_it, tol));
    return rcpp_result_gen;
END_RCPP
}
// Supvaluecpp
NumericVector Supvaluecpp(NumericVector x, double s, NumericVector y, NumericVector u, NumericVector v, double lambda);
RcppExport SEXP _SA23204158_Supvaluecpp(SEXP xSEXP, SEXP sSEXP, SEXP ySEXP, SEXP uSEXP, SEXP vSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(Supvaluecpp(x, s, y, u, v, lambda));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SA23204158_EMcpp", (DL_FUNC) &_SA23204158_EMcpp, 8},
    {"_SA23204158_Supvaluecpp", (DL_FUNC) &_SA23204158_Supvaluecpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SA23204158(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
